<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Computacion Visual 2022-I</title><link>https://icquirogac.github.io/showcase/docs/Talleres/Shaders/</link><description>Recent content on Computacion Visual 2022-I</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://icquirogac.github.io/showcase/docs/Talleres/Shaders/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://icquirogac.github.io/showcase/docs/Talleres/Shaders/Ejercicios/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://icquirogac.github.io/showcase/docs/Talleres/Shaders/Ejercicios/</guid><description> Ejercicios # coloring brightness //code luma.frag //code</description></item><item><title/><link>https://icquirogac.github.io/showcase/docs/Talleres/Shaders/Texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://icquirogac.github.io/showcase/docs/Talleres/Shaders/Texturing/</guid><description>Texturing # Introducci칩n # El desarrollo de este taller tiene como objetivo familiarizarse con el uso de shaders
Contexto # Teniendo como punto de partida el codigo que el profesor nos brindo en la pagina del curso
Resultados y C칩digo (Soluci칩n) # Deslice el mouse sobre el canvas para aplicar el shader en la zona. Con el Mouse Wheeler puede cambiar el tama침o del shader aplicado. texturing.js let easycam; let uvShader; let opacity; let radius; function preload() { // Define geometry in world space (i.</description></item></channel></rss>